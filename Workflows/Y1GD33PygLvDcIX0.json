{
  "active": true,
  "connections": {
    "Telegram Trigger2": {
      "main": [
        [
          {
            "node": "Limpiar Datos1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limpiar Datos1": {
      "main": [
        [
          {
            "node": "AI Agent2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent2": {
      "main": [
        [
          {
            "node": "Send a text message2",
            "type": "main",
            "index": 0
          },
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Structured Output Parser1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory1": {
      "ai_memory": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Enviar Datos": {
      "ai_tool": [
        []
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        []
      ]
    },
    "Contenido": {
      "main": [
        [
          {
            "node": "Usuario",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Usuario": {
      "main": [
        [
          {
            "node": "logo empresa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "ObtenerDiagrama": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML to PDF": {
      "main": [
        [
          {
            "node": "PDF to WORD",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "iterar en Arrays",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Metadatos": {
      "main": [
        [
          {
            "node": "Contenido",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Metadatos",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent2",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Reparar Mermaid Code ": {
      "main": [
        [
          {
            "node": "ObtenerDiagrama",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "iterar en Arrays": {
      "main": [
        [
          {
            "node": "HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML": {
      "main": [
        [
          {
            "node": "HTML to PDF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "logo empresa": {
      "main": [
        [
          {
            "node": "Reparar Mermaid Code ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PDF to WORD": {
      "main": [
        [
          {
            "node": "Descargar Word",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Descargar Word": {
      "main": [
        [
          {
            "node": "Send a document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-17T20:30:13.153Z",
  "id": "Y1GD33PygLvDcIX0",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "MVP Procedimientos",
  "nodes": [
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -13696,
        -3360
      ],
      "id": "9b0ae8ab-5163-4988-86b3-32731bf7803b",
      "name": "Telegram Trigger2",
      "webhookId": "ae934543-14c0-4bb4-83a1-b4a15acb32aa",
      "credentials": {
        "telegramApi": {
          "id": "jwPn8kLpS6D1h2Cx",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e7054931-86d5-4620-8926-a301739a25bc",
              "name": "sessionId",
              "value": "={{ $json.message.chat.id }}",
              "type": "string"
            },
            {
              "id": "f21ff46e-e9b5-400d-8bad-cd0dc411d3af",
              "name": "to",
              "value": "={{ $json.message.chat.id }}",
              "type": "string"
            },
            {
              "id": "733fc1ed-7da7-456b-b049-99e5265a56a9",
              "name": "mensaje",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -13472,
        -3360
      ],
      "id": "d23a487f-1d09-4674-9d18-d57023bd9b3e",
      "name": "Limpiar Datos1"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.mensaje }}",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=\n\n## 1) ROL\n- Eres Lito, un Agente de Captura de Procedimientos.  \n- Tu misión es recolectar datos y generar el código Mermaid (una sola línea) de un diagrama de flujo del procedimiento para la empresa Litoprocess.\n**Canal:** WhatsApp (conversación síncrona)  \n**Idioma:** Español (MX)  \n\n**Tono:** Profesional, claro y amable; estilo cercano mexicano.\n\n---\n\n## 2) OBJETIVO\n- A partir de una explicación libre del usuario (enviado por WhatsApp) y preguntas mínimas (una por mensaje), debes construir un procedimiento completo con:  \n  - Metadatos del documento (control documental).  \n  - Contenido (objetivo, alcance, referencias, definiciones, formatos, desarrollo, políticas, indicadores).  \n  - Diagrama Mermaid en una sola línea.  \n  - JSON de salida siempre actualizado en cada respuesta.  \n- **Regla de oro:** Una (1) pregunta por mensaje.  \n- No repitas preguntas.  \n- No inventes datos.  \n- Aprovecha al máximo lo ya dicho por el usuario.  \n- Si el usuario ya proporcionó algo, normaliza y valida (no lo vuelvas a pedir).\n- Todo lo que tu redactes muestralo al usuario y pregunta por su aprobacion, si quiere editarlo editalo y muestralo nuevemente.\n\n---\n## 4) CATÁLOGO DE ÁREAS (para {AREA} y selección por menú)\n- **DG** — Dirección General  \n- **MT** — Mantenimiento  \n- **DO** — Documentación  \n- **PP** — Planeación y Proyectos  \n- **GP** — Gestión de Proveedores  \n- **OF** — Oficina Técnica  \n- **CO** — Compras  \n- **LI** — Logística  \n- **CC** — Control de Calidad  \n- **MA** — Manufactura  \n- **CA** — Mesa de Control  \n- **ES** — Estampado  \n- **OP** — Operaciones  \n- **EN** — Ingeniería  \n- **CP** — Control de Producción  \n- **VE** — Ventas  \n- **CH** — Salud / Higiene (CH/RH)  \n- **RH** — Recursos Humanos  \n- **SI** — Sistemas / TI  \n- **AL** — Almacén  \n- **FA** — Facturación / Finanzas  \n- **VW** — Varios / Misceláneos  \n- **NN** — No Normalizado / Temporal  \n- **MQ** — Maquilas  \n- **ID** — Investigación y Desarrollo  \n- **S&H** — Seguridad e Higiene  \n- **IDIG** — Ingeniería Digital  \n\n\n## 5) VALIDACIONES Y NORMALIZACIONES\n- Tipo de documento: fija siempre `\"tipo_documento\": \"PO\"`. Nunca lo preguntes.  \n- Código del documento: `L-PO(-FSC)?-{AREA}-{NNN}`  \n  - `{AREA}` ∈ catálogo (§4). Si falta, pregunta mostrando opciones SIGLA — Nombre.  \n  - `-FSC` se incluye sólo si aplica. Si no está claro, pregunta: `\"¿Aplica FSC? (sí/no)\"`.  \n  - `{NNN}` es consecutivo de 3 dígitos (001–999). No lo preguntes; sólo respeta el formato con ceros a la izquierda (`\"000\"` temporal hasta asignación del sistema).  \n- Fecha de emisión: convierte a `DD / Mmm / AAAA` (mes en Ene, Feb, Mar, Abr, May, Jun, Jul, Ago, Sep, Oct, Nov, Dic).  \n  - Acepta entradas como `2024-01-03`, `03/01/2024`, `3 enero 2024` y normaliza a `03 / Ene / 2024`.  \n- Nombres (Elaboró / Revisó / Autorizó): deben ser mínimo nombre y apellidos. Valida y, si falta, pide corrección.  \n- Formatos: dedúcelos de la explicación si están mencionados; de lo contrario pídelos.  \n- Revisión: siempre `\"00\"`.  \n- Ortografía y estilo: mejora redacción sin cambiar hechos. No inventes pasos, roles o evidencias.  \n\n\n\n**Expresiones regulares útiles (guía):**\n- Fecha formateada:  \n^\\d{2}\\s*/\\s*(Ene|Feb|Mar|Abr|May|Jun|Jul|Ago|Sep|Oct|Nov|Dic)\\s*/\\s*\\d{4}$\n- Código:  \n^L-PO(?:-FSC)?-(DG|DO|GP|CO|CC|CA|OP|CP|CH|RH|AL|VW|MQ|S&H|MT|PP|OF|LI|MA|ES|EN|VE|SI|FA|NN|ID|IDIG)-\\d{3}$\n\n\n---\n\n## 6) REGLAS DE REDACCIÓN (Contenido)\n- **Título:** dedúcelo de la explicación; si es ambiguo, propón uno y pide confirmación.  \n- **Objetivo y Alcance:** redacta con ≥ 5 frases cada uno. Expande con contexto genérico sin inventar hechos específicos (no supongas sistemas, formatos o responsables que el usuario no mencionó).  \n- **Definiciones:** si el usuario no provee, busca palabras clave de la explicacion libre del usaurio y suguire al usario de 3 a 5 palabras con su definicion; respeta la regla de 1 pregunta por mensaje).  \n- **Desarrollo:**  \n- Convierte la narrativa en pasos ordenados con estructura `{responsable, actividad}`.  \n- Si detectas puntos de desicion, anótalos.  \n- Muestra los pasos propuestos y pregunta si desea agregar/editar. Repite hasta confirmar.  \n- **Políticas:** solicita y enumera (breve, accionables).  \n- **Indicadores:** estructura como `{nombre, meta,frecuencia, dueno_dato}`.  \n- Si falta meta, sugiere ≥ 95% y pide confirmación.  \n- frecuencia por defecto `\"mensual\"` (confirma si aplica).\n\nEjemplos de Redaccion: \n\n\"\"\"\nObjetivo: Establecer las actividades y responsabilidades en la solicitud de maquilas de acuerdo a las \nnecesidades de los procesos de producción en Litoprocess. \n\nAlcence: Aplica a todos los procesos de Litoprocess que intervienen en la manufactura de un producto \nque requiere un servicio de tercerización. \n\nActividad : Operaciones recibe el combo generado por ventas y clasifica la información contenida, \npara comunicar y enviar la documentación necesaria a otras áreas. \n \nDetermina el tipo de proceso o si se requiere la contratación de maquila para la \ntransformación del producto.\n\n\"\"\"\n\n\n## 7) ORDEN DE RECOLECCIÓN (prioridad de faltantes)\n1. Descripción general del procedimiento (si no existe).  \n2. Título (proponer y confirmar si falta).  \n3. Área ({AREA}) (mostrar menú SIGLA — Nombre).  \n4. ¿Aplica FSC? (sí/no).  \n5. Elaboró (Área que elaboró).  \n6. Elaboró Persona (nombre completo).  \n7. Fecha de emisión (normalizar).  \n8. Referencias_normativas.  \n9. Referencias_documento.  \n10. Formatos (códigos y nombres).  \n11. Desarrollo (proponer pasos → confirmar/ajustar → preguntar si desea agregar más).  \n12. Políticas.  \n13. Indicadores.  \n14. Revisó y Autorizó (nombres completos).  \n15. Crear mermaidCode \n\n\n---\n\n## 8) DIAGRAMA MERMAID (una sola línea)\n- Sintaxis base: `flowchart TD;`  \n- Regla pro: Encierra TODAS las etiquetas entre comillas dobles para evitar ambigüedades con números, acentos, paréntesis o signos de interrogación.  \n- Inicio/Fin: `A([\"Inicio\"]), Z([\"Fin\"])`.  \n- Paso: `P1[\"1. acción concreta (Responsable)\"]`.  \n- Decisión / Punto de control: `D1{\"¿Aplica FSC?\"}` o `D2{\"Punto de control: L-FO-CH-021\"}`.  \n- Una sola línea; separa cada elemento con `;`.  \n- Evita comillas tipográficas (“ ”, ‘ ’); usa comillas rectas \" en las etiquetas.  \n- Evita poner diagonales \"/\" \"\\\"  \n\n**Ejemplo válido (genérico):**  \nflowchart TD; A([\"Inicio\"]) --> P1[\"1. Recibir solicitud (Área)\"]; P1 --> D1{\"¿Cumple requisitos?\"}; D1 -- Sí --> P2[\"2. Ejecutar actividad (Responsable)\"]; D1 -- No --> P3[\"3. Notificar y cerrar (Responsable)\"]; P2 --> Z([\"Fin\"]); P3 --> Z([\"Fin\"])**Ejemplo del usuario (válido):**  flowchart TD; A([Inicio]) --> P1[\"1. Enviar Requisición de Personal a Atracción de Talento (Área solicitante)\"]; P1 --> P2[\"2. Verificar si el puesto es nuevo o reemplazo (Atracción de Talento)\"]; P2 --> D1{\"Puesto nuevo?\"}; D1 -- Sí --> P3[\"3. Elaborar Descripción de Puesto con autorización de Dirección (Atracción de Talento)\"]; D1 -- No --> P4[\"4. Validar perfil y Constancia de Competencia Laboral si aplica (Atracción de Talento)\"]; P3 --> P5[\"5. Difundir vacante en canales autorizados (Atracción de Talento)\"]; P4 --> P5; P5 --> P6[\"6. Filtrar CVs y verificar reingresos con Obligaciones Obrero Patronales (Atracción de Talento)\"]; P6 --> P7[\"7. Agendar entrevista inicial, evaluación teórica y psicométrica (Atracción de Talento)\"]; P7 --> P8[\"8. Llenar Formato de Evaluación de Entrevista para decidir la terna (Responsable de Área)\"]; P8 --> P9[\"9. Realizar evaluación médica (Servicio Médico)\"]; P9 --> D2{\"¿Candidato apto?\"}; D2 -- Sí --> P10[\"10. Solicitar Estudio Socioeconómico (Servicio Médico)\"]; D2 -- No --> Z([Fin]); P10 --> P11[\"11. Emitir oferta y recabar documentos para contratos y alta de nómina (Atracción de Talento)\"]; P11 --> P12[\"12. Registrar ingreso en biométricos e integrar expediente (Atracción de Talento)\"]; P12 --> P13[\"13. Gestionar inducción a la empresa con lista de asistencia y evaluaciones (Atracción de Talento)\"]; P13 --> P14[\"14. Realizar inducción al puesto (Jefe inmediato)\"]; P14 --> P15[\"15. Aplicar evaluaciones de desempeño cada 30 días durante primeros 3 meses (Atracción de Talento)\"]; P15 --> P16[\"16. Confirmar planta o terminar relación laboral (Atracción de Talento y Responsable de Área)\"]; P16 --> Z([Fin])\n\nCatálogo sugerido de state:\ninicio, esperando_descripcion, metadatos_area, metadatos_fsc, metadatos_elaboro, metadatos_fecha, contenido_titulo, contenido_objetivo, contenido_alcance, contenido_referencias, contenido_definiciones, contenido_formatos, contenido_desarrollo_borrador, contenido_desarrollo_confirmado, contenido_politicas, contenido_indicadores, aprobaciones_reviso_autorizo, diagrama_generado, revision_final, entrega_json_final.\n\n## 10) LÓGICA CONVERSACIONAL (paso a paso)\n- Clasifica: saludo vs. explicación.  \n- **Saludo** → pide descripción general (paso 1 del §7). `state = esperando_descripcion`.  \n- **Con explicación** → llena JSON y detecta faltantes.  \n- Pregunta 1 cosa a la vez, siguiendo el orden del §7. Actualiza `state` y `mensaje`.  \n- Normaliza: fecha, código, nombres, listas.  \n- Desarrollo: propone pasos `{no, responsable, actividad}` y pregunta si desea agregar/editar.  \n  - Si responde que **sí**, agrega o ajusta y vuelve a mostrar los pasos.  \n  - Si responde que **no**, marca `contenido_desarrollo_confirmado`.  \n- Genera `mermaidCode` con los pasos confirmados (una sola línea).  \n- Pide aprobaciones (Revisó, Autorizó).  \n- Entrega final: responde \"Generando Documento...\" `state = entrega_json_final` y sin preguntas.  \n\n---\n\n## 11) EJEMPLOS RÁPIDOS\n\n### Ejemplo A — Saludo\n**Entrada usuario:**  \n\n**Salida (solo JSON):**  \n```json\n{   \n  \"state\": \"esperando_descripcion\",   \n  \"mensaje\": \"¡Hola! Soy Lito. Para comenzar, cuéntame por favor: ¿qué procedimiento quieres documentar y cómo se realiza en tu área?\",   \n  \"metadatos\": {\n    \"fecha de emision\": \"\",\n   \"elaboro_area\": \"\",\n    \"elaboro\": \"\",\n    \"reviso\": \"\",\n    \"autorizo\": \"\",\n    \"tipo_documento\": \"PO\",\n    \"area\": \"\",\n    \"codigo\": \"L-PO-{AREA}-000\",\n    \"revision\": \"00\"\n  },   \n  \"contenido\": {\n    \"titulo\": \"\",\n    \"objetivo\": \"\",\n    \"alcance\": \"\",\n    \"referencias\": [],\n    \"definiciones\": [],\n    \"formatos\": [],\n    \"desarrollo\": [],\n    \"politicas\": [],\n    \"indicadores\": [],\n    \"mermaidCode\": \"\"\n  } \n}\nEs un procedimiento de reclutamiento para toda la empresa…\n{   \n  \"state\": \"metadatos_area\",   \n  \"mensaje\": \"Perfecto. Para armar el código del documento necesito el área. ¿Cuál aplica? (responde solo la SIGLA) DG — Dirección General | RH — Recursos Humanos | CH — Salud/Higiene | S&H — Seguridad e Higiene | OP — Operaciones | EN — Ingeniería\",   \n  \"metadatos\": {\n    \"fecha de emision\": \"\",\n    \"elaboro\": \"\",\n \"elaboro_area\": \",\n    \"reviso\": \"\",\n    \"autorizo\": \"\",\n    \"tipo_documento\": \"PO\",\n    \"area\": \"\",\n    \"codigo\": \"L-PO-{AREA}-000\",\n    \"revision\": \"00\"\n  },   \n  \"contenido\": {\n    \"titulo\": \"Reclutamiento, selección e incorporación de personal\",\n    \"objetivo\": \"\",\n    \"alcance\": \"\",\n    \"referencias\": [],\n    \"definiciones\": [],\n    \"formatos\": [],\n    \"desarrollo\": [],\n    \"politicas\": [],\n    \"indicadores\": [],\n    \"mermaidCode\": \"\"\n  } \n}\n\n\n\n## 12) NOTAS FINALES (Optimizado)\n\n* Si el usuario da información contradictoria, prioriza lo más reciente y pide confirmación en la siguiente interacción.\n* Mantén siempre el `mermaidCode` en **una sola línea**, con **comillas dobles rectas** en etiquetas y separadores `;`.\n* Normaliza caracteres problemáticos: convierte `\\\"`, `“ ”`, `‘ ’`, `…` a texto simple y usa siempre comillas rectas `\"`.\n* Nunca incluyas datos personales sensibles fuera de lo requerido en el control documental.\n* **Catálogos**: muéstralos con saltos de línea o guiones `-`, pero **nunca** con `*`.\n* Siempre responde con **JSON válido**, sin caracteres de Markdown o HTML (`* _ \\` [ ] < >`).\n* El campo `mensaje` debe ser texto plano, listo para enviar en Telegram con `parse_mode = None`.\n* No anuncies que vas a crear o mostrar el diagrama. **Hazlo directamente**.\n* En ningun mansaje al cliente agregues: \"*\"\n* NUNCA INICIES ELMENSAJE CON ALGUN SIGNO como \"!\", \"¡\",\"¿\",\"?\", etc.\n\n### 12.1 Filtro de saneamiento para `mermaidCode`\n\nAntes de devolver el diagrama:\n\n1. Reemplaza comillas escapadas y tipográficas → `\"`\n2. Elimina saltos de línea y espacios duplicados.\n3. Verifica que la cadena inicie con `flowchart TD;`.\n4. Separa cada parte con `;`.\n5. Asegura que corchetes, llaves y paréntesis estén balanceados.\n6. Conserva siempre las comillas en etiquetas.\n7. El `mensaje` nunca debe iniciar con un carácter especial.\n8. Nunca indiques que generaras el diagrama solo hazlo \n\nEjemplo erroneo: \n\n\"Perfecto, he registrado los nombres para revisión y autorización. Ahora generaré el código Mermaid para el diagrama de flujo del procedimiento.\"\n\nEjemplo Correcto: \n\n\"Generando documento...\"\n---\n\n### 12.2 Mensaje final y envío de datos\n\nCuando todos los campos estén completos:\n\n1. Responde:\n\n```json\n{ \"mensaje\": \"Generando documento...\" }\n```\n\n2. cambia el state  a \"entrega_json_final\"\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -13200,
        -3360
      ],
      "id": "5bf725fb-dc7d-43de-96a4-35a6ec54c289",
      "name": "AI Agent2",
      "retryOnFail": true
    },
    {
      "parameters": {
        "schemaType": "manual",
        "inputSchema": "{\n  \"type\": \"object\",\n  \"properties\": {\n    \"state\": { \"type\": \"string\" },\n    \"mensaje\": { \"type\": \"string\" },\n    \"to\": { \"type\": \"string\" },\n    \"metadatos\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"fecha de emision\": { \"type\": \"string\" },\n        \"elaboro\": { \"type\": \"string\" },\n        \"elaboro_area\": { \"type\": \"string\" },\n        \"reviso\": { \"type\": \"string\" },\n        \"autorizo\": { \"type\": \"string\" },\n        \"tipo_documento\": { \"type\": \"string\" },\n        \"area\": { \"type\": \"string\" },\n        \"codigo\": { \"type\": \"string\" },\n        \"revision\": { \"type\": \"string\" }\n      },\n      \"required\": [\n        \"fecha de emision\",\n        \"elaboro\",\n        \"reviso\",\n        \"autorizo\",\n        \"tipo_documento\",\n        \"area\",\n        \"codigo\",\n        \"revision\"\n      ]\n    },\n    \"contenido\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"titulo\": { \"type\": \"string\" },\n        \"objetivo\": { \"type\": \"string\" },\n        \"alcance\": { \"type\": \"string\" },\n        \"referencias\": {\n          \"type\": \"array\",\n          \"items\": { \"type\": \"string\" }\n        },\n          \"referencias_normativas\": {\n          \"type\": \"array\",\n          \"items\": { \"type\": \"string\" }\n        },\n        \"definiciones\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"termino\": { \"type\": \"string\" },\n              \"definicion\": { \"type\": \"string\" }\n            },\n            \"required\": [\"termino\", \"definicion\"]\n          }\n        },\n        \"formatos\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"codigo\": { \"type\": \"string\" },\n              \"nombre\": { \"type\": \"string\" }\n            },\n            \"required\": [\"codigo\", \"nombre\"]\n          }\n        },\n        \"desarrollo\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"no\": { \"type\": \"integer\" },\n              \"responsable\": { \"type\": \"string\" },\n              \"actividad\": { \"type\": \"string\" }\n            },\n            \"required\": [\"no\", \"responsable\", \"actividad\"]\n          }\n        },\n        \"politicas\": {\n          \"type\": \"array\",\n          \"items\": { \"type\": \"string\" }\n        },\n        \"indicadores\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"nombre\": { \"type\": \"string\" },\n              \"meta\": { \"type\": \"string\" },\n              \"frecuencia\": { \"type\": \"string\" },\n              \"dueno_dato\": { \"type\": \"string\" }\n            },\n            \"required\": [\"nombre\", \"meta\", \"frecuencia\", \"dueno_dato\"]\n          }\n        },\n        \"mermaidCode\": { \"type\": \"string\" }\n      },\n      \"required\": [\n        \"titulo\",\n        \"objetivo\",\n        \"alcance\",\n        \"referencias\",\n        \"referencias_normativas\",\n        \"definiciones\",\n        \"formatos\",\n        \"desarrollo\",\n        \"politicas\",\n        \"indicadores\",\n        \"mermaidCode\"\n      ]\n    }\n  },\n  \"required\": [\"state\", \"mensaje\", \"metadatos\", \"contenido\"]\n}\n",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        -12992,
        -3136
      ],
      "id": "bb974b94-9528-4428-9f2a-7ea3eb0a92dc",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -12912,
        -2928
      ],
      "id": "4951b60f-5eed-4d0e-8e23-35d369ba6596",
      "name": "Google Gemini Chat Model3",
      "credentials": {
        "googlePalmApi": {
          "id": "pdB77gCjQoMxFDV3",
          "name": "Pako Gemini"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Limpiar Datos1').item.json.to }}",
        "text": "={{ $json.output.mensaje }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -12624,
        -3456
      ],
      "id": "ed569e05-b6e2-43d0-bb4e-fa5076460dbd",
      "name": "Send a text message2",
      "webhookId": "f7633257-d03c-4312-be13-aa1d796f2bc2",
      "credentials": {
        "telegramApi": {
          "id": "jwPn8kLpS6D1h2Cx",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "tableName": "procedimientos_chat",
        "contextWindowLength": 60
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        -13120,
        -3136
      ],
      "id": "62c8ba63-eed4-4f1c-a063-7607d350e0ec",
      "name": "Postgres Chat Memory1",
      "credentials": {
        "postgres": {
          "id": "VS9LlojPUjkXGlOu",
          "name": "Litoprocess"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Usa este nodo cuando tengas  todos los datos y los envies ",
        "method": "POST",
        "url": "https://n8n.srv914565.hstgr.cloud/webhook/9ad2110b-2461-4ccc-95b8-e78556194b69",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('JSON', `Json recolectado por el agente`, 'json') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        -14672,
        -3056
      ],
      "id": "2dba4249-2ec1-4c6d-a821-8a4a9541c4c6",
      "name": "Enviar Datos"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -14480,
        -3264
      ],
      "id": "8beb2350-7e12-4426-9b04-2b4969b0ec9a",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "a6T9FSulj0yWIirx",
          "name": "Converging"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://n8n.srv914565.hstgr.cloud/webhook-test/9ad2110b-2461-4ccc-95b8-e78556194b69",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "[\n  {\n    \"JSON\": {\n      \"state\": \"entrega_json_final\",\n      \"mensaje\": \"Documento completo generado y enviado exitosamente.\",\n      \"metadatos\": {\n        \"fecha de emision\": \"20 / Mar / 2025\",\n        \"elaboro\": \"Francisco Sanchez Tirado\",\n        \"elaboro_area\": \"Manufactura\",\n        \"reviso\": \"Luis Juarez Pedroza\",\n        \"autorizo\": \"Alberto Martinez Perez\",\n        \"tipo_documento\": \"PO\",\n        \"area\": \"MA\",\n        \"codigo\": \"L-PO-MA-000\",\n        \"revision\": \"00\"\n      },\n      \"contenido\": {\n        \"titulo\": \"Procedimiento para maquilas\",\n        \"objetivo\": \"Establecer las actividades y responsabilidades en la solicitud de maquilas de acuerdo a las necesidades de los procesos de producción en Litoprocess. Este procedimiento garantiza que la solicitud y seguimiento de servicios de tercerización se realice de manera organizada y efectiva, cumpliendo con los estándares de calidad. Además, define claramente los roles y responsabilidades de cada área involucrada para asegurar la eficiencia y oportunidad en la entrega. Contribuye a mantener la satisfacción del cliente y la mejora continua en los procesos productivos de Litoprocess.\",\n        \"alcance\": \"Este procedimiento aplica a todos los procesos dentro de Litoprocess que intervienen en la manufactura de productos que requieren servicios de tercerización. Cubre desde la recepción de la orden de compra del cliente hasta la entrega final del producto terminado, integrando áreas clave como Ventas, Manufactura, Maquila, Control de Calidad y Logística. Se enfoca en estandarizar las actividades para asegurar el cumplimiento de tiempos, calidad y requisitos específicos del cliente. Además, establece lineamientos para la coordinación con proveedores externos y el manejo documental asociado.\",\n        \"referencias\": [\n          \"ISO 9001:2015\",\n          \"FSC-STD-40-004 V3\"\n        ],\n        \"referencias_normativas\": [\n          \"ISO 9001:2015\",\n          \"FSC-STD-40-004 V3\"\n        ],\n        \"definiciones\": [\n          {\n            \"termino\": \"Maquila\",\n            \"definicion\": \"Servicio de tercerización para procesos de manufactura.\"\n          },\n          {\n            \"termino\": \"Combo\",\n            \"definicion\": \"Conjunto de documentos que incluye presupuesto, pedido, orden de producción, cotización y especificaciones.\"\n          }\n        ]\n      }\n    }\n  }\n]",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -14000,
        -2640
      ],
      "id": "3a04d411-fe5e-4c88-aa99-5c9df7a2b6bd",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c51eccf1-0156-441e-a343-cb536fcbb126",
              "leftValue": "={{ $json.output.state }}",
              "rightValue": "entrega_json_final",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -12624,
        -3264
      ],
      "id": "1817bec7-c35a-4ca8-bb1f-8dc2ef33ffca",
      "name": "If"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "a79203ff-2223-43f6-9c0e-0024749ed6e3",
              "name": "desarrollo",
              "value": "={{ $('If').item.json.output.contenido.desarrollo }}",
              "type": "array"
            },
            {
              "id": "d84f6d91-1339-47ad-a24f-91f007fb18cb",
              "name": "objetivo",
              "value": "={{ $('If').item.json.output.contenido.objetivo }}",
              "type": "string"
            },
            {
              "id": "7953256b-0961-46df-a80d-dc41bccd8869",
              "name": "alcance",
              "value": "={{ $('If').item.json.output.contenido.alcance }}",
              "type": "string"
            },
            {
              "id": "eb5729b9-0dec-4187-b77e-9e72be865c12",
              "name": "referencias",
              "value": "={{ $('If').item.json.output.contenido.referencias }}",
              "type": "array"
            },
            {
              "id": "e9a76ebf-588e-4d62-a729-7c680e3bd48c",
              "name": "mermaidCode",
              "value": "={{ $('If').item.json.output.contenido.mermaidCode }}",
              "type": "string"
            },
            {
              "id": "fb500f32-37f6-4e8c-aacd-db8b9f693481",
              "name": "definiciones",
              "value": "={{ $('If').item.json.output.contenido.definiciones }}",
              "type": "array"
            },
            {
              "id": "b03dbc58-5397-4801-819c-1ec66ef67f09",
              "name": "indicadores",
              "value": "={{ $('If').item.json.output.contenido.indicadores }}",
              "type": "array"
            },
            {
              "id": "009053a6-2903-4d8f-9ce9-2b1269fad831",
              "name": "politicas",
              "value": "={{ $('If').item.json.output.contenido.politicas }}",
              "type": "array"
            },
            {
              "id": "946ee626-d5d9-4ed3-a6ad-6063e4f5e631",
              "name": "formatos",
              "value": "={{ $('If').item.json.output.contenido.formatos }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -12160,
        -3376
      ],
      "id": "5c5bf8b0-b93b-42c8-b6ce-aed34306816c",
      "name": "Contenido"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f9a0946c-969a-46b9-ad6f-fc7770768f42",
              "name": "to",
              "value": "={{ $('Telegram Trigger2').item.json.message.chat.id }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -11936,
        -3376
      ],
      "id": "46915bf7-a76b-44cf-b885-50d57602b201",
      "name": "Usuario"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "http://mermaid:7000/png",
        "sendBody": true,
        "contentType": "raw",
        "rawContentType": "text/plain",
        "body": "={{ $json.message.content }}",
        "options": {
          "response": {
            "response": {
              "responseFormat": "file",
              "outputPropertyName": "=data"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -11136,
        -3376
      ],
      "id": "a798b048-21f4-4906-a8e2-dc93b6d0a75e",
      "name": "ObtenerDiagrama"
    },
    {
      "parameters": {
        "html": "<!DOCTYPE html>\n<html lang=\"es\">\n\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>{{ $('Metadatos').item.json.titulo }}</title>\n</head>\n\n<style>\n    body {\n        font-family: Arial, sans-serif;\n        margin: 0;\n        padding: 20px;\n        font-size: 12px;\n        line-height: 1.2;\n    }\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n        margin-bottom: 10px;\n        text-align: center;\n    }\n\n    th,\n    td {\n        border: 1px solid #000;\n        padding: 5px;\n        vertical-align: top;\n        vertical-align: middle;\n    }\n\n    .logo-imagen {\n        height: 40px;\n        display: block;\n        margin: 0 auto;\n        background-size: contain;\n        background-repeat: no-repeat;\n        background-position: center;\n\n    }\n\n    .header-table {\n        width: 100%;\n        margin-bottom: 15px;\n    }\n\n    .header-table th,\n    .header-table td {\n        border: 0.5px solid #000;\n        padding: 5px;\n    }\n\n    .content-table {\n        width: 100%;\n        margin-bottom: 10px;\n    }\n\n    .content-table th,\n    .content-table td {\n        border: 0.5px solid #000;\n        padding: 5px;\n    }\n\n    .flow-table {\n        width: 100%;\n        margin-bottom: 10px;\n    }\n\n    .flow-table th,\n    .flow-table td {\n        border: 1px solid #000;\n        padding: 5px;\n        text-align: center;\n    }\n\n    .indicator-table {\n        width: 100%;\n        margin-bottom: 10px;\n    }\n\n    .indicator-table th,\n    .indicator-table td {\n        border: 1px solid #000;\n        padding: 5px;\n    }\n\n    .changes-table {\n        width: 100%;\n        margin-bottom: 10px;\n    }\n\n    .changes-table th,\n    .changes-table td {\n        border: 1px solid #000;\n        padding: 5px;\n    }\n\n    .page-break {\n        page-break-after: always;\n    }\n\n    .text-center {\n        text-align: center;\n\n    }\n\n    .text-bold {\n        font-weight: bold;\n    }\n\n    .signature-table {\n        width: 100%;\n        margin-top: 20px;\n    }\n\n    .signature-table-color {\n        background-color: #eee;\n    }\n\n    .signature-table td {\n        border: 1px solid #000;\n        padding: 5px;\n        text-align: center;\n    }\n\n    .signature-table-nombre {\n        height: 60px;\n    }\n\n    h1,\n    h2,\n    h3 {\n        margin: 10px 0;\n    }\n\n    .definicion-item {\n        margin-bottom: 10px;\n        line-height: 1.4;\n    }\n\n    .definicion-titulo {\n        font-weight: bold;\n        display: inline;\n    }\n\n    .definicion-texto {\n        display: inline;\n    }\n\n    ol,\n    ul {\n        margin-top: 5px;\n        margin-bottom: 5px;\n        padding-left: 20px;\n    }\n\n    li {\n        margin-bottom: 3px;\n    }\n\n    p {\n        text-align: justify;\n    }\n\n    .page {\n        width: 210mm;\n        min-height: 297mm;\n        margin: 0 auto;\n        padding: 32px;\n        padding: 1.5cm;\n    }\n\n    .diagram-container img {\n        max-width: 100%;\n        height: auto;\n        display: block;\n        margin: 50px auto;\n    }\n\n    .page:last-of-type {\n        page-break-after: avoid !important;\n        break-after: avoid !important;\n        min-height: auto !important;\n        margin-bottom: 0 !important;\n        padding-bottom: 0 !important;\n    }\n</style>\n\n<body>\n\n    <!-- Página 1 -->\n    <div class=\"page\">\n        <!-- Header -->\n        <table class=\"header-table\">\n            <tr>\n                <td><b>Fecha de Emisión</b><br>{{ $('Metadatos').item.json.fecha_emision }}</td>\n                <td><img class=\"logo-imagen\"      src=\"data:image/svg+xml;base64,{{ $('logo empresa').item.json.logo }}\"  alt=\"Logo\"></td>\n                <td><b>Elaboró</b><br>{{ $('Metadatos').item.json.elaboro }}</td>\n            </tr>\n            <tr>\n                <td style=\"width: 25%;\"><b>Código</b><br> {{ $('Metadatos').item.json.codigo }}</td>\n                <td style=\"width: 50%;\" class=\"text-bold\">PROCEDIMIENTO</td>\n                <td style=\"width: 25%;\"><b>Referencias Normativas</b><br>ISO 9001:2015 FSC-STD-40-004</td>\n            </tr>\n            <tr>\n                <td><b>Revisión</b><br>{{ $('Metadatos').item.json.revision }}</td>\n                <td class=\"text-bold\">{{ $('Metadatos').item.json.titulo }}.</td>\n                <td></td>\n            </tr>\n        </table>\n\n        <!-- objetivo -->\n\n        <h3>1. OBJETIVO:</h3>\n        <p>{{ $('Contenido').item.json.objetivo }}</p>\n\n        <!-- Alcance -->\n\n        <h3>2. ALCANCE:</h3>\n        <p>{{ $('Contenido').item.json.alcance }}</p>\n\n        <!-- Referencias -->\n\n        <h3>3. REFERENCIAS:</h3>\n        <p>{{ $('Contenido').item.json.referencias }}</p>\n\n        <!-- Formatos -->\n\n        <h3>4. FORMATOS:</h3>\n       {{ $json.formatosHtml }}\n        <!-- Definiciones -->\n\n        <h3>5. DEFINICIONES</h3>\n\n        {{ $json.definicionesHtml }}\n\n        <!-- Desarrollo -->\n\n        <h3>6. DESARROLLO</h3>\n\n        <table class=\"content-table\">\n            <tr>\n                <th style=\"width: 10%;\">No.</th>\n                <th style=\"width: 20%;\">RESPONSABLE</th>\n                <th style=\"width: 70%;\">ACTIVIDAD RECLUTAMIENTO</th>\n            </tr>\n            {{ $json.desarrolloHtml }}\n\n        </table>\n\n        <!-- Políticas -->\n        <h2>7. POLÍTICAS.</h2>\n        {{ $json.politicasHtml }}\n\n         <!-- Diagrama de flujo -->\n        <h3>8. DIAGRAMA DE FLUJO.</h3>\n    <div class=\"diagram-container\">\n    <img style=\"width: 100px;\" src=\"data:image/png;base64,{{ $json.data }}\" alt=\"Diagrama de Flujo\">\n</div>\n\n        <!-- Indicadores -->\n        <h3>9. INDICADORES.</h3>\n\n        <table class=\"indicator-table text-bold\">\n            <tr class=\"signature-table-color\">\n                <th style=\"width: 25%;\">INDICADOR</th>\n                <th style=\"width: 25%;\">META</th>\n                <th style=\"width: 25%;\">MONITOREO</th>\n                <th style=\"width: 25%;\">RESPONSABLE</th>\n            </tr>\n            {{ $json.indicadoresHtml }}\n        </table>\n\n     \n\n\n        <!-- Control de Cambios -->\n\n        <h3>10. CONTROL DE CAMBIOS.</h3>\n\n        <table class=\"changes-table\">\n            <tr class=\"signature-table-color\">\n                <th style=\"width: 10%;\">REVISIÓN</th>\n                <th style=\"width: 30%;\">FECHA DE REVISIÓN</th>\n                <th style=\"width: 60%;\">MOTIVO DEL CAMBIO</th>\n            </tr>\n            <tr>\n                <td></td>\n                <td></td>\n                <td></td>\n            </tr>\n\n        </table>\n        <table class=\"signature-table\">\n            <tr class=\"text-bold signature-table-color\">\n                <td class=\"width: 33%;\">Elaboró</td>\n                <td style=\"width: 34%;\">Revisó</td>\n                <td style=\"width: 33%;\">Autorizó</td>\n            </tr>\n            <tr class=\"signature-table-nombre\">\n                <td>{{ $('Metadatos').item.json.elaboro }}</td>\n                <td>{{ $('Metadatos').item.json.reviso }}</td>\n                <td>{{ $('Metadatos').item.json.autorizo }}</td>\n            </tr>\n            <tr class=\"text-bold\">\n                <td>Atracción de Talento</td>\n                <td>Gte. Capital Humano</td>\n                <td>Director General</td>\n            </tr>\n        </table>\n    </div>\n\n</body>\n\n</html>"
      },
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        -10464,
        -3376
      ],
      "id": "73744ddb-5020-49fa-ad9d-8ff0b3078207",
      "name": "HTML"
    },
    {
      "parameters": {
        "htmlInput": "={{ $json.html }}"
      },
      "type": "@custom-js/n8n-nodes-pdf-toolkit.html2Pdf",
      "typeVersion": 1,
      "position": [
        -10240,
        -3376
      ],
      "id": "608ed05b-f7b5-45b1-a2e3-49642915690c",
      "name": "HTML to PDF",
      "credentials": {
        "customJsApi": {
          "id": "lCllIeZx5fba9opf",
          "name": "CustomJS account"
        }
      }
    },
    {
      "parameters": {
        "operation": "binaryToPropery",
        "options": {}
      },
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -10912,
        -3376
      ],
      "id": "778b2f4d-2b20-4302-ae5b-d17711109064",
      "name": "Extract from File"
    },
    {
      "parameters": {
        "operation": "sendDocument",
        "chatId": "={{ $('Usuario').item.json.to }}",
        "binaryData": true,
        "additionalFields": {
          "caption": "Aqui tienes el documento "
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -9616,
        -3376
      ],
      "id": "0bd04c95-9fae-4210-8b61-4cbfed19c571",
      "name": "Send a document",
      "webhookId": "76ab0cd1-d24e-4cbb-bf2e-7ef6571c3e32",
      "credentials": {
        "telegramApi": {
          "id": "jwPn8kLpS6D1h2Cx",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "86884632-59d9-4451-b0e7-46d106550e66",
              "name": "fecha_emision",
              "value": "={{ $json.output.metadatos['fecha de emision'] }}",
              "type": "string"
            },
            {
              "id": "feffdef4-0d3c-459e-a196-6784bb481ccd",
              "name": "elaboro_area",
              "value": "={{ $json.output.metadatos.elaboro_area }}",
              "type": "string"
            },
            {
              "id": "c40a7e08-2c6f-43a4-9601-04f21013d0ab",
              "name": "codigo",
              "value": "={{ $json.output.metadatos.codigo }}",
              "type": "string"
            },
            {
              "id": "c52a61f3-95ea-411b-b4aa-7dc16de40c35",
              "name": "area",
              "value": "={{ $json.output.metadatos.area }}",
              "type": "string"
            },
            {
              "id": "b07a03d8-d778-4960-b03e-335f57c25fbd",
              "name": "revision",
              "value": "={{ $json.output.metadatos.revision }}",
              "type": "string"
            },
            {
              "id": "6adb6dd5-bdf8-45ed-a86d-575274538a55",
              "name": "reviso",
              "value": "={{ $json.output.metadatos.reviso }}",
              "type": "string"
            },
            {
              "id": "cc2d21ec-4bce-4c20-96c1-72d035930c78",
              "name": "autorizo",
              "value": "={{ $json.output.metadatos.autorizo }}",
              "type": "string"
            },
            {
              "id": "d43b1409-d593-44f9-90f7-ed50430f28be",
              "name": "tipo_documento",
              "value": "={{ $json.output.metadatos.tipo_documento }}",
              "type": "string"
            },
            {
              "id": "6a624f1a-4515-4392-a07d-ae1cf6488396",
              "name": "titulo",
              "value": "={{ $json.output.contenido.titulo }}",
              "type": "string"
            },
            {
              "id": "9bd85397-2396-4896-887a-deeca83b2a50",
              "name": "elaboro",
              "value": "={{ $json.output.metadatos.elaboro }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -12384,
        -3376
      ],
      "id": "66df3166-f99a-48ff-878a-21b26e4fcb4a",
      "name": "Metadatos"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -13248,
        -3136
      ],
      "id": "d0428e65-ee4e-47fb-a341-5b266a4c22fb",
      "name": "Google Gemini Chat Model2",
      "credentials": {
        "googlePalmApi": {
          "id": "pdB77gCjQoMxFDV3",
          "name": "Pako Gemini"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "gpt-4.1-mini",
          "mode": "list",
          "cachedResultName": "GPT-4.1-MINI"
        },
        "messages": {
          "values": [
            {
              "content": "={{ $('Contenido').item.json.mermaidCode }}"
            },
            {
              "content": "=Recibiras un codigo para mermaid, debes verificar que este correcto en sus sintaxis y corregir cual quier error, solo devueleve el codigo, sin comillas ni nada\n\nEjemplo de codigo correcto: \n\nflowchart TD\n    A([\"Inicio\"]) --> P1[\"1. Cliente envía Orden de Compra (Ventas)\"]\n    P1 --> P2[\"2. Genera el Combo (Ventas)\"]\n    P2 --> P3[\"3. Entrega el Combo a Operaciones (Ventas)\"]\n    P3 --> P4[\"4. Recibe y clasifica información del Combo (Jefe de Operaciones)\"]\n    P4 --> D1{\"5. ¿Requiere compra externa? (Jefe de Operaciones)\"}\n    D1 -- Sí --> P6[\"6. Genera solicitud a Compras (Jefe de Operaciones)\"]\n    D1 -- No --> P7[\"7. Envía cotización y OP a Maquilas (Jefe de Operaciones)\"]\n    P6 --> P8[\"8. Genera carta de envío con especificaciones y dummy (Maquilas)\"]\n    P7 --> P8\n    P8 --> P9[\"9. Registra solicitud en sistema para OC (Maquilas)\"]\n    P9 --> P10[\"10. Emite Orden de Compra (Compras)\"]\n    P10 --> P11[\"11. Recibe carta y OC, valida información (Proveedor)\"]\n    P11 --> P12[\"12. Solicita liberación de productos y registra salida (Maquilas)\"]\n    P12 --> D2{\"13. ¿Requisitos de productos válidos? (Calidad)\"}\n    D2 -- Sí --> P14[\"14. Libera material (Calidad)\"]\n    D2 -- No --> P15[\"15. Reporta no conformidad (Calidad)\"]\n    P14 --> P16[\"16. Coordina transporte al proveedor (Entregas)\"]\n    P15 --> Z([\"Fin\"])\n    P16 --> P17[\"17. Recibe producto y elabora muestra (Proveedor)\"]\n    P17 --> P18[\"18. Solicita Vo. Bo. a Calidad, si aplica (Proveedor)\"]\n    P18 --> D3{\"19. ¿Muestra cumple requisitos? (Calidad)\"}\n    D3 -- Sí --> P20[\"20. Autoriza inicio de proceso (Calidad)\"]\n    D3 -- No --> P21[\"21. Solicita ajustes (Calidad)\"]\n    P20 --> P22[\"22. Realiza operaciones con orden y autorizaciones (Proveedor)\"]\n    P21 --> P22\n    P22 --> P23[\"23. Registra bitácora de envíos/recepciones (Maquilas)\"]\n    P23 --> P24[\"24. Controla entradas y notifica (Vigilancia)\"]\n    P24 --> P25[\"25. Verifica cantidades y condiciones (Entregas)\"]\n    P25 --> D4{\"26. ¿Inspección es conforme? (Calidad)\"}\n    D4 -- Sí --> P27[\"27. Libera productos (Calidad)\"]\n    D4 -- No --> P28[\"28. Reporta no conformidad e informa a responsables (Calidad)\"]\n    P27 --> P29[\"29. Firman facturas al recibir (Almacén/Maquilas/Producción)\"]\n    P28 --> P30[\"30. Informa sobre cambios solicitados por cliente (Ventas)\"]\n    P29 --> P30\n    P30 --> Z([\"Fin\"])\n\nTomar en cuenta : \n\nEn flowchart TD, los nodos con texto entre comillas deben escribirse como [\"texto\"] o ([\"texto\"]), pero nunca mezclados.\n\nEvita las comillas dobles escapadas dentro de los nodos (usa comillas simples o sin comillas).\n\nLos nodos de fin/inicio deben tener el mismo estilo para consistencia.\n",
              "role": "system"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -11488,
        -3376
      ],
      "id": "9bdbb9c3-d83e-4514-ae26-7b4a408f9c88",
      "name": "Reparar Mermaid Code ",
      "credentials": {
        "openAiApi": {
          "id": "a6T9FSulj0yWIirx",
          "name": "Converging"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const definiciones = $(\"Contenido\").first().json.definiciones || [];\nconst formatos = $(\"Contenido\").first().json.formatos || [];\nconst desarrollo = $(\"Contenido\").first().json.desarrollo || [];\nconst politicas = $(\"Contenido\").first().json.politicas || [];\nconst indicadores = $(\"Contenido\").first().json.indicadores || [];\n\nlet definicionesHtml = \"\";\nlet desarrolloHtml = \"\";\nlet politicasHtml = \"\";\nlet indicadoresHtml = \"\";\nlet formatosHtml = \"\";\n\nconst sectionFormat = 4 // \"4\" de 4.x\nconst sectionDef = 5; // \"5\" de \"5.x\"\nconst sectionDes = 6; // \"6\" de \"6.x\"\n\n// --- Definiciones ---\n(definiciones || []).forEach((def, i) => {\n  const num = `${sectionDef}.${i + 1}`; // 5.1, 5.2...\n  const texto = (def.definicion || \"\").replace(/\\.\\s*$/, \"\"); // evita doble punto\n\n  definicionesHtml += `\n    <div class=\"definicion-item\">\n      <span class=\"definicion-titulo\">${num}. <strong>${def.termino || \"\"}</strong>:</span>\n      <span class=\"definicion-texto\"> ${texto}.</span>\n    </div>`;\n});\n\n// --- Desarrollo ---\n(desarrollo || []).forEach((dev, i) => {\n  const num = `${sectionDes}.${i + 1}`; // 6.1, 6.2...\n\n  desarrolloHtml += `\n    <tr>\n      <td>${num}</td>\n      <td>${dev.responsable || \"\"}</td>\n      <td>${dev.actividad || \"\"}</td>\n    </tr>`;\n});\n\n// --- Políticas ---\n(politicas || []).forEach((pol) => {\n  politicasHtml += `\n    <ul>\n      <li>${pol}</li>\n    </ul>`;\n});\n\n// --- Políticas ---\n(indicadores || []).forEach((ind) => {\n  indicadoresHtml += `\n           <tr>\n                <td>${ind.nombre}</td>\n                <td>${ind.meta}</td>\n                <td>${ind.frecuencia}</td>\n                <td>${ind.dueno_dato}</td>\n            </tr>\n            `;\n});\n\n// --- Formatos ---\n(formatos || []).forEach((format) => {\n  formatosHtml += `\n           <ul>\n      <li>${format.codigo} - ${format.nombre}</li>\n    </ul>`;\n\n});\n\n// --- Return ---\nreturn [\n  {\n    json: {\n      ...$json,\n      definicionesHtml,\n      desarrolloHtml,\n      politicasHtml,\n      indicadoresHtml,\n      formatosHtml\n    },\n  },\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -10688,
        -3376
      ],
      "id": "8d6fcb8f-387d-4e07-abd5-7c9c9790c933",
      "name": "iterar en Arrays"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e40bf43b-cf96-4825-9e93-1ba3dfcd6b6f",
              "name": "logo",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -11712,
        -3376
      ],
      "id": "c2366aae-667d-404f-9765-2c3cea64245e",
      "name": "logo empresa"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.pdfrest.com/word",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Accept",
              "value": "application/json"
            },
            {
              "name": "Api-Key",
              "value": "78eb049c-1717-48fa-ae1c-ad57e3d40236"
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "parameterType": "formBinaryData",
              "name": "file",
              "inputDataFieldName": "data"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -10032,
        -3376
      ],
      "id": "d03ea5f1-cb28-439a-bb1d-ec308597cb6f",
      "name": "PDF to WORD"
    },
    {
      "parameters": {
        "url": "={{ $json.outputUrl }}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -9824,
        -3376
      ],
      "id": "65f93674-e9fe-4739-93b5-16caa983c2b3",
      "name": "Descargar Word"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-17T20:30:13.160Z",
      "updatedAt": "2025-09-17T20:30:13.160Z",
      "role": "workflow:owner",
      "workflowId": "Y1GD33PygLvDcIX0",
      "projectId": "zJAKCKeG7Ef7sO6E"
    }
  ],
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-09-04T14:59:17.899Z",
      "updatedAt": "2025-09-04T14:59:17.899Z",
      "id": "NJCajeulEkuGXGh4",
      "name": "Litoprocess"
    },
    {
      "createdAt": "2025-09-17T20:32:18.543Z",
      "updatedAt": "2025-09-17T20:32:18.543Z",
      "id": "xwHRss3saaSbxJhJ",
      "name": "MVP"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-09-30T23:02:54.000Z",
  "versionId": "195ef350-c35a-4a16-b91e-2d7634446cbb"
}