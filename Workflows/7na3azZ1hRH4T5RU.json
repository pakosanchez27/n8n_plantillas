{
  "active": true,
  "connections": {
    "Agregar Fecha/Hora": {
      "main": [
        [
          {
            "node": "Code in JavaScript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code in JavaScript": {
      "main": [
        [
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Cron 9am": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Agregar Fecha/Hora",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request1": {
      "main": [
        [
          {
            "node": "Code in JavaScript1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append row in sheet": {
      "main": [
        [
          {
            "node": "HTTP Request1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-09-30T22:57:03.689Z",
  "id": "7na3azZ1hRH4T5RU",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Central_Reportes",
  "nodes": [
    {
      "parameters": {},
      "name": "Cron 9am",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        -768,
        -64
      ],
      "id": "3820cfb1-3f38-42f1-a8d8-3982cb067a6a"
    },
    {
      "parameters": {
        "functionCode": "return items.map(item => {\n  const now = new Date();\n  const fechaMX = new Date(now.toLocaleString('en-US', { timeZone: 'America/Mexico_City' }));\n\n  item.json.fecha = fechaMX.toISOString().split('T')[0];\n  item.json.hora = fechaMX.getHours().toString().padStart(2,'0') + ':' +\n                   fechaMX.getMinutes().toString().padStart(2,'0') + ':' +\n                   fechaMX.getSeconds().toString().padStart(2,'0');\n  return item;\n});"
      },
      "name": "Agregar Fecha/Hora",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -256,
        -64
      ],
      "id": "bcfdbdbd-e767-4242-b417-3eca6b4f40ce"
    },
    {
      "parameters": {
        "jsCode": "const tipoCambio = 18.5; // USD → MXN\n\nconst ahora = new Date();\nconst fechaLocal = ahora.toLocaleDateString('es-MX');\nconst horaLocal = ahora.toLocaleTimeString('es-MX', {hour12: false});\n\nlet resultado = [];\n\nitems.forEach(item => {\n    // Aquí se usan los tokens y costo que ya calcula el workflow Central\n    const tokens = item.json.tokens || 0; \n    const costoUSD = item.json.costo || 0; \n    const costoMXN = (costoUSD * tipoCambio).toFixed(2);\n    const estado = item.json.estado || 'Activo';\n    const workflowName = item.json.workflowName || item.json.workflow || 'Central';\n\n    resultado.push({\n        json: {\n            Fecha: fechaLocal,\n            Hora: horaLocal,\n            Workflow: workflowName,\n            Tokens: tokens,\n            Costo: costoMXN,\n            Estado: estado\n        }\n    });\n});\n\nreturn resultado;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        64,
        0
      ],
      "id": "7707c6d8-f77c-4422-aedc-58319a0a76ad",
      "name": "Code in JavaScript"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "167VaLJy12n1_CDyrz8bzSYqnwXj5veNR1zQ42qc0SPU",
          "mode": "list",
          "cachedResultName": "Token",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/167VaLJy12n1_CDyrz8bzSYqnwXj5veNR1zQ42qc0SPU/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Hoja 1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/167VaLJy12n1_CDyrz8bzSYqnwXj5veNR1zQ42qc0SPU/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Fecha": "={{ $json.Fecha }}",
            "Hora": "={{ $json.Hora }}",
            "Workflow": "={{ $json.Workflow }}",
            "Tokens": "={{ $json.Tokens }}",
            "Costo": "={{ $json.Costo }}",
            "Estado": "={{ $json.Estado }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Fecha",
              "displayName": "Fecha",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Hora",
              "displayName": "Hora",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Workflow",
              "displayName": "Workflow",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Tokens",
              "displayName": "Tokens",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Costo",
              "displayName": "Costo",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "Estado",
              "displayName": "Estado",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        272,
        0
      ],
      "id": "2431fe55-8a17-462c-a708-dd7bb4e080d0",
      "name": "Append row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "UUAnITIItWHLyMP6",
          "name": "ApiGoogleEquipo"
        }
      }
    },
    {
      "parameters": {
        "url": "https://n8n.srv914565.hstgr.cloud/api/v1/workflows",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-N8N-API-KEY",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI3ZTI5MDU2Zi0yMTJiLTQ5YjEtYWI1Ni00M2M2YjQyM2FiY2QiLCJpc3MiOiJuOG4iLCJhdWQiOiJwdWJsaWMtYXBpIiwiaWF0IjoxNzU4NTg5MjQwLCJleHAiOjE3NjExMDU2MDB9.c3_F4xZ-PyIT-dKc_sE1DpE8wFAxw9cU57GKiib0WAc"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -512,
        -64
      ],
      "id": "11c3f0af-f7eb-42a7-b47a-032084c8fad9",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "url": "https://n8n.srv914565.hstgr.cloud/api/v1/workflows",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-N8N-API-KEY",
              "value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI3ZTI5MDU2Zi0yMTJiLTQ5YjEtYWI1Ni00M2M2YjQyM2FiY2QiLCJpc3MiOiJuOG4iLCJhdWQiOiJwdWJsaWMtYXBpIiwiaWF0IjoxNzU4NTg5MjQwLCJleHAiOjE3NjExMDU2MDB9.c3_F4xZ-PyIT-dKc_sE1DpE8wFAxw9cU57GKiib0WAc"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"Fecha\": \"{{$json[\"Fecha\"]}}\",\n  \"Hora\": \"{{$json[\"Hora\"]}}\",\n  \"Workflow\": \"{{$json[\"Workflow\"]}}\",\n  \"Tokens\": \"{{$json[\"Tokens\"]}}\",\n  \"Costo\": \"{{$json[\"Costo\"]}}\",\n  \"Estado\": \"{{$json[\"Estado\"]}}\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        768,
        48
      ],
      "id": "3505c055-2b22-4fb1-bb0f-c4f6e915055d",
      "name": "HTTP Request1"
    },
    {
      "parameters": {
        "jsCode": "// Tomar un campo existente, por ejemplo \"name\" o \"id\" del workflow\nconst texto = $json[\"name\"] || $json[\"Workflow\"] || \"default\";\n\n// Generar tokens de manera simulada (ejemplo)\nconst tokens = texto.length * 50; // 50 tokens por carácter\nconst tipoCambio = 18.5; // USD → MXN\nconst costoUSD = tokens * 0.000045;\nconst costoMXN = costoUSD * tipoCambio;\n\nreturn [\n  {\n    json: {\n      tokens: tokens,\n      costo: parseFloat(costoMXN.toFixed(2)) // en pesos\n    }\n  }\n];\n\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        976,
        48
      ],
      "id": "e7cdcfc9-46d2-4e52-b6d5-74fd40f0d760",
      "name": "Code in JavaScript1"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-09-30T22:57:03.694Z",
      "updatedAt": "2025-09-30T22:57:03.694Z",
      "role": "workflow:owner",
      "workflowId": "7na3azZ1hRH4T5RU",
      "projectId": "zJAKCKeG7Ef7sO6E"
    }
  ],
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-10-01T06:03:11.000Z",
  "versionId": "663f4204-b5a0-49a7-b30e-834d43c5ff51"
}