{
  "active": true,
  "connections": {
    "n8n": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Failed Flows": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Completed Notification",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Execute Workflow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Failed Flows",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Starting Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Starting Message": {
      "main": [
        [
          {
            "node": "n8n",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Starting Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Globals",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Items1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Globals": {
      "main": [
        [
          {
            "node": "Get file data1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get File1": {
      "main": [
        [
          {
            "node": "Merge Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If file too large1": {
      "main": [
        [
          {
            "node": "Get File1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Merge Items1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge Items1": {
      "main": [
        [
          {
            "node": "isDiffOrNew1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "isDiffOrNew1": {
      "main": [
        [
          {
            "node": "Check Status1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Status1": {
      "main": [
        [
          {
            "node": "Same file - Do nothing1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is different1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "File is new1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Same file - Do nothing1": {
      "main": [
        [
          {
            "node": "Return1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is different1": {
      "main": [
        [
          {
            "node": "Edit existing file1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "File is new1": {
      "main": [
        [
          {
            "node": "Create new file1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create new file1": {
      "main": [
        [
          {
            "node": "Return1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit existing file1": {
      "main": [
        [
          {
            "node": "Return1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get file data1": {
      "main": [
        [
          {
            "node": "If file too large1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-30T17:13:45.662Z",
  "id": "YvhigZz1pTw6mdJj",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Respaldo de WF",
  "nodes": [
    {
      "parameters": {},
      "id": "8e0b6c22-a57f-43bc-a798-2895249863e0",
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        -288,
        -64
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Subworkflow",
        "height": 731.7039821513649,
        "width": 1910.7813046051347,
        "color": 6
      },
      "id": "ee829663-1f6a-48f7-944a-57a4a1c9bc3e",
      "name": "Sticky Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -768,
        320
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "3d6b6fcf-0fef-47fa-855d-c5d64d910912",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "position": [
        -720,
        704
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "filters": {},
        "requestOptions": {}
      },
      "id": "7ae83d2b-044b-4ad8-a376-90220a758cff",
      "name": "n8n",
      "type": "n8n-nodes-base.n8n",
      "position": [
        128,
        48
      ],
      "typeVersion": 1,
      "credentials": {
        "n8nApi": {
          "id": "BOJUi87H6zIbN3ZM",
          "name": "n8n Al chile"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "0040549a-b656-4b52-9548-2ee6a93ae31f",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        320,
        48
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "daysInterval": 7,
              "triggerAtHour": 1,
              "triggerAtMinute": 33
            }
          ]
        }
      },
      "id": "3299ee0b-257a-4bb2-a283-41648f20ad4e",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        -288,
        144
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "content": "## Backup to GitHub \nThis workflow will backup all instance workflows to GitHub every 24 hours.\n\nThe files are saved into folders using `YYYY/MM/` for the directory path and `ID.json` for the filename.\n\nThe Repo Owner, Repo Name and Main folder are set using the **Variables** feature but can be replaced with the `Config` node in the subworkflow. \n\nThe workflow runs calls itself to help reduce memory usage, Once the workflow has completed it will send an optional notification to Slack.\n\n### Time to Run\nTested with 1423 workflows on `1.44.1` it took under 30 minutes for the first run and under 12 minutes once the initial run is complete.",
        "height": 417,
        "width": 385,
        "color": 4
      },
      "id": "dc5d529f-4c70-41f1-aee5-df59d5091436",
      "name": "Sticky Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -768,
        -144
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "content": "## Main workflow loop",
        "height": 416.1856906618075,
        "width": 1272.6408145680155,
        "color": 7
      },
      "id": "dddb26af-cf1e-41cc-9735-ebf60494048d",
      "name": "Sticky Note2",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -320,
        -144
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C09CXPY5QE8",
          "mode": "list",
          "cachedResultName": "backups-n8n-github"
        },
        "text": "=:information_source:  Starting Workflow Backup [{{ $execution.id }}]",
        "otherOptions": {}
      },
      "id": "4d35ff34-64e0-4954-a591-70559b33fd8d",
      "name": "Starting Message",
      "type": "n8n-nodes-base.slack",
      "position": [
        -48,
        48
      ],
      "webhookId": "c02eb407-5547-4aa0-9ebf-46dab67b63b6",
      "typeVersion": 2.2,
      "credentials": {
        "slackApi": {
          "id": "ugHtD7X22StqeGT0",
          "name": "Converging"
        }
      }
    },
    {
      "parameters": {
        "workflowId": "={{ $workflow.id }}",
        "mode": "each",
        "options": {}
      },
      "id": "8a77d044-5383-403b-a82f-53101732e966",
      "name": "Execute Workflow",
      "type": "n8n-nodes-base.executeWorkflow",
      "position": [
        544,
        64
      ],
      "typeVersion": 1,
      "onError": "continueErrorOutput"
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C09CXPY5QE8",
          "mode": "list",
          "cachedResultName": "backups-n8n-github"
        },
        "text": "=âœ… Backup has completed - {{ $('n8n').all().length }} workflows have been processed.",
        "otherOptions": {}
      },
      "id": "d354e01d-f6a0-4c2b-8d8e-f84c11a79f21",
      "name": "Completed Notification",
      "type": "n8n-nodes-base.slack",
      "position": [
        544,
        -128
      ],
      "webhookId": "a0c6e8c8-5d71-40fa-b02b-63a7ed5726c4",
      "executeOnce": true,
      "typeVersion": 2.2,
      "credentials": {
        "slackApi": {
          "id": "ugHtD7X22StqeGT0",
          "name": "Converging"
        }
      }
    },
    {
      "parameters": {
        "select": "channel",
        "channelId": {
          "__rl": true,
          "value": "C09CXPY5QE8",
          "mode": "list",
          "cachedResultName": "backups-n8n-github"
        },
        "text": "=:x: Failed to backup {{ $('Loop Over Items').item.json.id }}",
        "otherOptions": {
          "includeLinkToWorkflow": false
        }
      },
      "id": "a2e258b5-0314-4e27-bb62-4d298d9b30e2",
      "name": "Failed Flows",
      "type": "n8n-nodes-base.slack",
      "position": [
        752,
        80
      ],
      "webhookId": "2a092edb-de12-490f-931b-34d70e7d7696",
      "typeVersion": 2.2,
      "credentials": {
        "slackApi": {
          "id": "ugHtD7X22StqeGT0",
          "name": "Converging"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "6cf546c5-5737-4dbd-851b-17d68e0a3780",
              "name": "repo.owner",
              "type": "string",
              "value": "pakosanchez27"
            },
            {
              "id": "452efa28-2dc6-4ea3-a7a2-c35d100d0382",
              "name": "repo.name",
              "type": "string",
              "value": "n8n_plantillas"
            },
            {
              "id": "fcd37e95-e24c-42d0-8e35-cfd03e34f8dd",
              "name": "repo.path",
              "value": "Workflows/",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "873069e8-630f-47ea-83b9-57697cb778e1",
      "name": "Globals",
      "type": "n8n-nodes-base.set",
      "position": [
        -496,
        592
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "content": "## Edit this node ðŸ‘‡",
        "height": 80,
        "width": 150,
        "color": 4
      },
      "id": "23114360-bcd2-4cdc-96ee-c883df1ce690",
      "name": "Sticky Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -544,
        480
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8d513345-6484-431f-afb7-7cf045c90f4f",
              "name": "Done",
              "type": "boolean",
              "value": true
            }
          ]
        },
        "options": {}
      },
      "id": "6f7e727f-e079-45fd-84d7-5f4b34a416d3",
      "name": "Return1",
      "type": "n8n-nodes-base.set",
      "position": [
        1024,
        528
      ],
      "typeVersion": 3.3
    },
    {
      "parameters": {
        "url": "={{ $json.download_url }}",
        "options": {}
      },
      "id": "016be61d-415a-45b1-a253-cb20fa10d3b5",
      "name": "Get File1",
      "type": "n8n-nodes-base.httpRequest",
      "position": [
        128,
        400
      ],
      "typeVersion": 4.2
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 1,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "combinator": "and",
          "conditions": [
            {
              "id": "45ce825e-9fa6-430c-8931-9aaf22c42585",
              "operator": {
                "type": "string",
                "operation": "empty",
                "singleValue": true
              },
              "leftValue": "={{ $json.content }}",
              "rightValue": ""
            },
            {
              "id": "9619a55f-7fb1-4f24-b1a7-7aeb82365806",
              "operator": {
                "type": "string",
                "operation": "notExists",
                "singleValue": true
              },
              "leftValue": "={{ $json.error }}",
              "rightValue": ""
            }
          ]
        },
        "options": {}
      },
      "id": "c6eea05d-dc5b-4910-b7c1-99454c8e4fd5",
      "name": "If file too large1",
      "type": "n8n-nodes-base.if",
      "position": [
        -80,
        432
      ],
      "typeVersion": 2
    },
    {
      "parameters": {},
      "id": "e44e6af0-f728-469e-b3a3-03cd7b0dcc85",
      "name": "Merge Items1",
      "type": "n8n-nodes-base.merge",
      "position": [
        -80,
        688
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const orderJsonKeys = (jsonObj) => {\n  const ordered = {};\n  Object.keys(jsonObj).sort().forEach(key => {\n    ordered[key] = jsonObj[key];\n  });\n  return ordered;\n}\n\n// Check if file returned with content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Decode base64 content and parse JSON\n  const origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64').toString());\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n// No file returned / new workflow\n} else if (Object.keys($input.all()[0].json).includes(\"data\")) {\n  const origWorkflow = JSON.parse($input.all()[0].json.data);\n  const n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON objects\n  const orderedOriginal = orderJsonKeys(origWorkflow);\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n\n  // Determine difference\n  if (JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual)) {\n    $input.all()[0].json.github_status = \"same\";\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n  $input.all()[0].json.content_decoded = orderedOriginal;\n\n} else {\n  // Order JSON object\n  const n8nWorkflow = $input.all()[1].json;\n  const orderedActual = orderJsonKeys(n8nWorkflow);\n  \n  // Proper formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return items\nreturn $input.all();"
      },
      "id": "cfbdb06f-add0-4722-aebd-d869a8d78b50",
      "name": "isDiffOrNew1",
      "type": "n8n-nodes-base.code",
      "position": [
        128,
        688
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "dataType": "string",
        "value1": "={{$json.github_status}}",
        "rules": {
          "rules": [
            {
              "value2": "same"
            },
            {
              "value2": "different",
              "output": 1
            },
            {
              "value2": "new",
              "output": 2
            }
          ]
        }
      },
      "id": "a8312ab2-bddf-4ae3-8e3d-5cd0415aea41",
      "name": "Check Status1",
      "type": "n8n-nodes-base.switch",
      "position": [
        336,
        688
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "b748955f-8890-49ed-b565-dff748152c7e",
      "name": "Same file - Do nothing1",
      "type": "n8n-nodes-base.noOp",
      "position": [
        560,
        528
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "ffe9739f-e470-497e-9c54-2f392636dc5c",
      "name": "File is different1",
      "type": "n8n-nodes-base.noOp",
      "position": [
        560,
        688
      ],
      "typeVersion": 1
    },
    {
      "parameters": {},
      "id": "d251c06e-ebe4-4254-a6fb-2e00c2558588",
      "name": "File is new1",
      "type": "n8n-nodes-base.noOp",
      "position": [
        560,
        848
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "resource": "file",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.name }}"
        },
        "filePath": "={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew1').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "26efcd2b-6cc4-4e96-979c-a3cbad9ba40f",
      "name": "Create new file1",
      "type": "n8n-nodes-base.github",
      "position": [
        784,
        848
      ],
      "webhookId": "e5e4ce8b-74a3-4b94-83ca-351edc280faf",
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "r0Gb6mu6Z6W84oKE",
          "name": "GithubPako"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "edit",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $('Globals').item.json.repo.name }}"
        },
        "filePath": "={{ $('Globals').item.json.repo.path }}{{$('Execute Workflow Trigger').first().json.id}}.json",
        "fileContent": "={{$('isDiffOrNew1').item.json[\"n8n_data_stringy\"]}}",
        "commitMessage": "={{$('Execute Workflow Trigger').first().json.name}} ({{$json.github_status}})"
      },
      "id": "5cbdc21e-abd4-4677-83b3-1e2c0736c1b9",
      "name": "Edit existing file1",
      "type": "n8n-nodes-base.github",
      "position": [
        784,
        672
      ],
      "webhookId": "a57e71de-4960-4d25-a59f-1a9e2e96aff5",
      "typeVersion": 1,
      "credentials": {
        "githubApi": {
          "id": "r0Gb6mu6Z6W84oKE",
          "name": "GithubPako"
        }
      }
    },
    {
      "parameters": {
        "resource": "file",
        "operation": "get",
        "owner": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo.owner }}"
        },
        "repository": {
          "__rl": true,
          "mode": "name",
          "value": "={{ $json.repo.name }}"
        },
        "filePath": "={{ $json.repo.path }}{{ $('Execute Workflow Trigger').item.json.id }}.json",
        "asBinaryProperty": false,
        "additionalParameters": {}
      },
      "id": "c2385bda-90fa-4f98-ae10-d24c944807db",
      "name": "Get file data1",
      "type": "n8n-nodes-base.github",
      "position": [
        -272,
        432
      ],
      "webhookId": "743111c3-2c21-4658-8097-a9fe966f43d2",
      "typeVersion": 1,
      "alwaysOutputData": true,
      "credentials": {
        "githubApi": {
          "id": "r0Gb6mu6Z6W84oKE",
          "name": "GithubPako"
        }
      },
      "continueOnFail": true
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "shared": [
    {
      "createdAt": "2025-08-30T17:13:45.670Z",
      "updatedAt": "2025-08-30T17:13:45.670Z",
      "role": "workflow:owner",
      "workflowId": "YvhigZz1pTw6mdJj",
      "projectId": "zJAKCKeG7Ef7sO6E"
    }
  ],
  "staticData": {
    "node:Schedule Trigger": {
      "recurrenceRules": [
        255
      ]
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-08-30T18:48:43.000Z",
  "versionId": "abdef1b8-302d-490c-acf7-93d60402eaa1"
}