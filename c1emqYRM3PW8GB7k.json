{
  "active": false,
  "connections": {
    "Edit Fields": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Edit Fields2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields1",
            "type": "main",
            "index": 0
          }
        ],
        [],
        [],
        [],
        [
          {
            "node": "Edit Fields3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields1": {
      "main": [
        [
          {
            "node": "SERVICIOS",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SERVICIOS": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "SERVICIOS",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "SERVICIOS",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser1": {
      "ai_outputParser": [
        [
          {
            "node": "AI Agent",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "Structured Output Parser1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "Structured Output Parser",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields2": {
      "main": [
        [
          {
            "node": "AGENDADOR",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "AGENDADOR",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "SUBAGENTE_AGENDAR",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "SUBAGENTE_AGENDAR": {
      "ai_tool": [
        [
          {
            "node": "AGENDADOR",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Send a text message1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AGENDADOR": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get_availability": {
      "ai_tool": [
        [
          {
            "node": "SUBAGENTE_AGENDAR",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "create_booking": {
      "ai_tool": [
        [
          {
            "node": "SUBAGENTE_AGENDAR",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Zep": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "AGENDADOR",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "SERVICIOS",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "SUBAGENTE_AGENDAR",
            "type": "ai_memory",
            "index": 0
          },
          {
            "node": "AI Agent1",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message1": {
      "main": [
        []
      ]
    },
    "Edit Fields3": {
      "main": [
        [
          {
            "node": "AI Agent1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent1": {
      "main": [
        [
          {
            "node": "Send a text message2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model6": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent1",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-30T09:43:28.013Z",
  "id": "c1emqYRM3PW8GB7k",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Clinica Dental",
  "nodes": [
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "684dcffd-4eb8-465a-8039-9f23021f19e2",
              "name": "sessionId",
              "value": "={{ $json.message.chat.id }}",
              "type": "string"
            },
            {
              "id": "6942a755-4ca0-43cf-8d2e-0e0c1a920b23",
              "name": "mensaje",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        176,
        464
      ],
      "id": "ba23b8d1-3798-460f-9196-c07fbde7453a",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.output.intent }}",
                    "rightValue": "agendar",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "a69d3dfa-daf6-42c8-b000-191cb9368048"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "agendar"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "7c02197b-6483-47e5-898c-d6e347025385",
                    "leftValue": "={{ $json.output.intent }}",
                    "rightValue": "servicios",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "servicios"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "219ce387-b06f-4c22-b960-3adac61686b4",
                    "leftValue": "={{ $json.output.intent }}",
                    "rightValue": "reagendar",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "reagendar"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f9bc2bd8-e34a-4352-aa1e-85e675bfe632",
                    "leftValue": "={{ $json.output.intent }}",
                    "rightValue": "facturacion",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "facturacion"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a02f72bd-fcb0-45d3-9c61-d4394af1e721",
                    "leftValue": "={{ $json.output.intent }}",
                    "rightValue": "humano",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "humano"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        896,
        400
      ],
      "id": "fec025e2-359e-42da-a3bc-f1852ff792ea",
      "name": "Switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "cf89ea52-ff9f-4dfc-8aff-b2d838a4c0d8",
              "name": "from",
              "value": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
              "type": "number"
            },
            {
              "id": "b9ec1cb2-008a-4ace-997a-aa0130317b7e",
              "name": "msg_text",
              "value": "={{ $('Telegram Trigger').item.json.message.text }}",
              "type": "string"
            },
            {
              "id": "b718af48-99bd-46e5-ba03-2a67c6394b25",
              "name": "entities.servicio",
              "value": "={{ $json.message.content.entities }}",
              "type": "object"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1216,
        608
      ],
      "id": "cb552de7-d930-4756-a7ed-be3e0618d619",
      "name": "Edit Fields1"
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.2,
      "position": [
        -48,
        464
      ],
      "id": "6ba2d1e5-d8c5-4504-b7c6-0bd742f1c777",
      "name": "Telegram Trigger",
      "webhookId": "bc9d3dd9-e458-4d75-9202-1c3e8e2f04b4",
      "credentials": {
        "telegramApi": {
          "id": "PWWICc6HrrGPnXpR",
          "name": "Clinica Denatal"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Edit Fields1').item.json.from }}",
        "text": "={{ $json.output.reply_text }}",
        "replyMarkup": "inlineKeyboard",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2144,
        608
      ],
      "id": "6fa5d663-d66a-4f80-a630-e8b59a2f02a6",
      "name": "Send a text message",
      "webhookId": "efc30889-90a1-45b8-a02c-8c2b57f76950",
      "credentials": {
        "telegramApi": {
          "id": "PWWICc6HrrGPnXpR",
          "name": "Clinica Denatal"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=MSG=\"{{ $json.msg_text }}\"\nENT_SERVICIO=\"{{ $json.entities }}\"\n",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=Eres un agente para WhatsApp de \"Clínica Dental Sonrisa\" (subflujo SERVICIOS).\n- Tono: alegre, casual CDMX, enérgico, 2–4 emojis.\n- Usa SIEMPRE saltos de línea en reply_text: inserta \"\\n\" entre bloques/frases.\n- Si NO detectas servicio: menú 1–5, cada opción en su propia línea con su emoji, y CTA final.\n- Si SÍ detectas: 4–5 líneas: \n  1) Título con nombre + emojis \n  2) Qué es + beneficio \n  3) Duración \n  4) Precio desde (MXN)\n  5) CTA: ¿Agendamos? \"Agendar <clave>\" o \"Ver horarios\".\n- Máx 600 caracteres. Sin diagnósticos.\n\nCATÁLOGO/SINÓNIMOS/EMOJIS: (igual a la versión anterior)\nFORMATO SALIDA JSON estricto: { \"service_key\": \"<clave|null>\", \"reply_text\": \"<texto>\", \"confidence\": <0..1> }\n\nCATÁLOGO:\n- limpieza: nombre=\"Limpieza dental\", desc=\"Remueve placa y sarro.\", precioDesde=600, duracion=\"30-45 min\"\n- ortodoncia: nombre=\"Ortodoncia\", desc=\"Alinea dientes con brackets o alineadores.\", precioDesde=12000, duracion=\"Plan 12-24 meses\"\n- blanqueamiento: nombre=\"Blanqueamiento\", desc=\"Aclara varios tonos.\", precioDesde=2500, duracion=\"60-90 min\"\n- implantes: nombre=\"Implantes\", desc=\"Reemplaza piezas ausentes.\", precioDesde=18000, duracion=\"2-3 citas\"\n- urgencias: nombre=\"Urgencias\", desc=\"Dolor agudo, fracturas, infecciones.\", precioDesde=800, duracion=\"Según evaluación\"\n\nSINÓNIMOS:\n- limpieza: profilaxis, detartraje\n- ortodoncia: brackets, alineadores, invisibles, frenos\n- blanqueamiento: blanquear, whitening, blanco\n- implantes: implante, tornillo, pilar\n- urgencias: emergencia, dolor, infeccion, infección\n\nEMOJIS POR SERVICIO:\n- limpieza: 🦷✨💎\n- ortodoncia: 😁📏🦷\n- blanqueamiento: ✨💎😄\n- implantes: 🦷🔩⚙️\n- urgencias: 🚑⚠️🆘\n(usa 2–4 emojis; si no hay servicio detectado, usa 🦷✨📅)\n\nESTILO:\n- Español CDMX, casual, enérgico, proactivo; frases cortas; “tú”.\n- No copies definiciones tal cual; redacta un mini-mensaje natural con beneficios.\n- Sin consejos médicos ni diagnósticos. Máx 600 caracteres.\n\nCOMPORTAMIENTO:\n- Si NO detectas servicio: muestra menú 1–5 con cada opción + su emoji y CTA para elegir número.\n- Si SÍ detectas: crea 2–4 frases fluidas que integren: qué es, beneficio, duración y “precio desde”.\n  Cierra con CTA: ¿Agendamos? di: \"Agendar <clave>\" o \"Ver horarios\".\n\nFORMATO DE SALIDA (JSON estricto, sin Markdown):\n{ \"service_key\": \"<clave|null>\", \"reply_text\": \"<texto>\", \"confidence\": <0..1> }\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1568,
        400
      ],
      "id": "e1dde405-e3d1-4a31-aecc-68995244e4b4",
      "name": "SERVICIOS"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1536,
        624
      ],
      "id": "51e75792-2eae-4e38-8b9b-b0cd2e61b0ee",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "a6T9FSulj0yWIirx",
          "name": "Converging"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"service_key\": null,\n  \"reply_text\": \"\",\n  \"confidence\": 0.0\n}\n",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        1664,
        624
      ],
      "id": "8b5a3434-087f-4d73-8f96-6bbf50c0a745",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=MENSAJE: \"{{ $json.mensaje }}\"\nMETADATOS: { \"from\": \"{{ $json.sessionId }}\", \"idioma\": \"es\", \"canal\": \"whatsapp\" }\n\n",
        "hasOutputParser": true,
        "options": {
          "systemMessage": "=Eres un clasificador de intención para WhatsApp de una clínica dental. Etiquetas permitidas: [\"agendar\",\"servicios\",\"reagendar\",\"facturacion\",\"humano\",\"fallback\"]. Devuelve SOLO JSON válido. Extrae entidades cuando existan: servicio (texto), fecha (ISO-8601), hora (HH:mm), nombre (texto). Si hay ambigüedad, usa \"fallback\". Si hay varias intenciones, elige la más accionable para continuar el flujo.\n\nREGLAS DE CLASIFICACION (resumen):\n- \"agendar\": quiere nueva cita, disponibilidad u horario.\n- \"servicios\": pide info de tratamientos, precios o duración.\n- \"reagendar\": mover/cancelar/confirmar una cita existente.\n- \"facturacion\": factura, RFC, CFDI, comprobante.\n- \"humano\": pide hablar con una persona o presenta queja directa.\n- Si no hay suficiente contexto => \"fallback\".\n\nEjemplos (no respondas a estos):\n- \"Quiero una limpieza mañana a las 4\" -> agendar\n- \"¿Cuánto cuesta la ortodoncia?\" -> servicios\n- \"Necesito mover mi cita del lunes\" -> reagendar\n- \"¿Me pueden facturar? Mi RFC es...\" -> facturacion\n- \"Quiero hablar con alguien\" -> humano\n- \"Hola\" -> fallback\n\n\nReglas estrictas \n- Siempre revisa la conversacion para verificar si el cliente no esta en un proceso activo, nunca deduscas solo con una frace \nRESPONDE SOLO CON JSON:\n{\n  \"intent\": \"<agendar|servicios|reagendar|facturacion|humano|fallback>\",\n  \"confidence\": 0.0,\n  \"entities\": {\n    \"servicio\": null,\n    \"fecha\": null,\n    \"hora\": null,\n    \"nombre\": null\n  },\n  \"reason\": \"breve justificacion\"\n}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        432,
        464
      ],
      "id": "907fdcc3-071c-48e3-ab2b-344440df1ca0",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        400,
        688
      ],
      "id": "a5322b22-3f4c-493e-8acc-c0cab5c528f9",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "a6T9FSulj0yWIirx",
          "name": "Converging"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"intent\": \"<agendar|servicios|reagendar|facturacion|humano|fallback>\",\n  \"confidence\": 0.0,\n  \"entities\": {\n    \"servicio\": null,\n    \"fecha\": null,\n    \"hora\": null,\n    \"nombre\": null\n  },\n  \"reason\": \"breve justificacion\"\n}\n",
        "autoFix": true
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        528,
        688
      ],
      "id": "bef446db-ad3d-4c2d-9ce9-2df1e45cb040",
      "name": "Structured Output Parser1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        608,
        896
      ],
      "id": "84c59713-ac54-4d82-bd0d-39a72029a43a",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "a6T9FSulj0yWIirx",
          "name": "Converging"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1744,
        832
      ],
      "id": "f778db9e-5253-4da8-b71a-41f8be37d3c1",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "a6T9FSulj0yWIirx",
          "name": "Converging"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e190ebcf-b186-4e3c-a33f-5192b7463706",
              "name": "From",
              "value": "={{ $('Edit Fields').item.json.sessionId }}",
              "type": "string"
            },
            {
              "id": "7406bcf9-7601-4321-841b-2fc50921caab",
              "name": "msg_text",
              "value": "={{ $('Edit Fields').item.json.mensaje }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1120,
        -144
      ],
      "id": "afd4f271-e67c-469c-9b83-b8e83f43ceb8",
      "name": "Edit Fields2"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-5-mini",
          "mode": "list",
          "cachedResultName": "gpt-5-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1376,
        -128
      ],
      "id": "650f8bd5-0d7f-47ab-90da-4d31d5ba247c",
      "name": "OpenAI Chat Model4",
      "credentials": {
        "openAiApi": {
          "id": "a6T9FSulj0yWIirx",
          "name": "Converging"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1600,
        80
      ],
      "id": "d284c9d5-2ea8-4c63-8de7-a8d24ab2d2ea",
      "name": "OpenAI Chat Model5",
      "credentials": {
        "openAiApi": {
          "id": "a6T9FSulj0yWIirx",
          "name": "Converging"
        }
      }
    },
    {
      "parameters": {
        "text": "=MSG=\"{{ $json.msg_text }}\"\nTZ=\"America/Mexico_City\"\nTODAY=\"{{ $now.setZone('America/Mexico_City').toFormat('yyyy-LL-dd') }}\"\nNOW_ISO=\"{{ $now.setZone('America/Mexico_City').toISO() }}\"\n",
        "options": {
          "systemMessage": "=Eres el SUBAGENTE_AGENDAR de \"Clínica Dental Sonrisa\".\nTono alegre CDMX (2–4 emojis), usa \"\\n\". Frases cortas.\nTu función principal: AGENDAR con el payload recibido. No pidas datos personales (eso lo hace el Agendador).\nSi recibes BOOKING_REQUEST completo → agenda.\nSi el usuario pide \"ver horarios\", \"cambiar horario\" u \"otra hora\":\n  - No pidas fecha ni servicio.\n  - Si tienes LAST_OPTIONS (labels y slots previos), re-muéstralos tal cual.\n  - Si no tienes opciones previas, llama get_availability(date_from=TODAY, days=7, timezone=TZ) y reúne ≥5 próximos slots futuros (filtra horas pasadas de hoy).\n  - Muestra SIEMPRE la lista numerada en formato exacto: \"n) <Día> hh:mm am/pm\" (día en español, mayúscula inicial; 12h; am/pm minúsculas).\n  - Responde con state=\"proposing\" y data.options=[ISO...]. CTA: \"Responde 1, 2, 3, 4 o 5\".\nSi eligen un número válido:\n  - Actualiza booking_request.start = options[n-1] y procede a crear la cita.\nErrores de backend: devuelve mensaje breve para reintentar o elegir otro horario.\nSalida JSON estricta:\n{ \"reply_text\":\"...\", \"state\":\"<proposing|done>\", \"data\":{ \"options\":string[]|null, \"booking_id\":string|null }, \"booking_request\": object|null }\nLímite 600 chars.\n\nTOOLS:\n1) get_availability(date_from:string, days:int, timezone:string) -> { \"slots\":[{ \"start\": ISO8601, \"end\": ISO8601 }] }\n2) create_booking(payload: object) -> { \"booking_id\": string, \"start\": ISO8601, \"end\": ISO8601, \"address\": string|null }\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        1616,
        -128
      ],
      "id": "db04d1e0-520d-4033-9135-045823b09814",
      "name": "SUBAGENTE_AGENDAR"
    },
    {
      "parameters": {
        "jsCode": "const string = $input.first().json.output\nconst json = JSON.parse($input.first().json.output)\n\nreturn json"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2064,
        -144
      ],
      "id": "39820226-9699-4b99-beea-ceac83545317",
      "name": "Code"
    },
    {
      "parameters": {
        "chatId": "={{ $('Edit Fields2').item.json.From }}",
        "text": "={{ $json.reply_text }}",
        "replyMarkup": "inlineKeyboard",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2288,
        -144
      ],
      "id": "ff58b6ed-0e46-4c42-abb6-f254de731c95",
      "name": "Send a text message1",
      "webhookId": "efc30889-90a1-45b8-a02c-8c2b57f76950",
      "credentials": {
        "telegramApi": {
          "id": "PWWICc6HrrGPnXpR",
          "name": "Clinica Denatal"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=MSG=\"{{ $json.msg_text }}\"\nTZ=\"America/Mexico_City\"\n\nNOW_ISO=\"{{ $now.setZone('America/Mexico_City').toISO() }}\"\nHISTORY= Usa la memoria temporal zep\n",
        "options": {
          "systemMessage": "=Eres el AGENDADOR de \"Clínica Dental Sonrisa\".\nObjetivo: mostrar ≥5 horarios desde TODAY (TZ), obtener 1 dato por mensaje: slot → nombre (≥2 palabras) → email (regex simple) → teléfono MX (10 dígitos). Leer la conversacion para evitar pedir un dato que ya tenemos, confírmalos brevemente y avanza.\nNo pidas fecha ni servicio. Filtra horas pasadas de hoy (>= NOW_ISO). Formato de horarios obligatorio: \"n) <Día> hh:mm am/pm\".\nTono alegre CDMX, 2–4 emojis, usa \"\\n\".\nEstados: proposing | awaiting_name | awaiting_email | awaiting_phone | ready.\n\nReglas \n- Siempre consulta la disponibilidad  el SUBAGENTE_AGENDAR antes de dar cual quiero horario \n\nSalida JSON estricta:\n{ \"reply_text\":\"...\", \"state\":\"<estado>\", \"data\":{ \"options\":string[]|null, \"slot\":string|null, \"name\":string|null, \"email\":string|null, \"phone\":string|null }, \"booking_request\": null|object, \"handoff\": boolean }\nAl quedar todo listo (state=ready), construye booking_request EXACTO:\n{\n  \"attendee\": { \"language\":\"es\",\"name\":\"{name}\",\"timeZone\":\"America/Mexico_City\",\"email\":\"{email}\",\"phoneNumber\":\"{phone}\" },\n  \"start\":\"{slot_ISO}\",\n  \"eventTypeId\":3201745\n}\ny pon handoff=true. Máx 600 chars en reply_text.\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1344,
        -352
      ],
      "id": "5ba99aba-f392-4eaa-846b-c00116bf6e0e",
      "name": "AGENDADOR"
    },
    {
      "parameters": {
        "toolDescription": "search availability",
        "url": "=https://api.cal.com/v2/slots?start={{ $now.setZone('America/Mexico_City').toISO() }}&end={{ $now.setZone('America/Mexico_City').plus({ days: 5 }).toISO() }}\n&timeZone=America%2FMexico_City&eventTypeId=3201745",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer cal_live_b1d89ae4b002f27c7adc2752686c0b6e"
            },
            {
              "name": "cal-api-version",
              "value": "2024-09-04"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1728,
        80
      ],
      "id": "47fc5b89-8f20-40fa-927f-f4cc5fd54b13",
      "name": "get_availability"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.cal.com/v2/bookings",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer cal_live_b1d89ae4b002f27c7adc2752686c0b6e"
            },
            {
              "name": "cal-api-version",
              "value": "2024-08-13"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"attendee\": {\n    \"language\": \"es\",\n    \"name\": \"{{ $fromAI('nombre', 'Franisco Sanchez') }}\",\n    \"timeZone\": \"America/Mexico_City\",\n    \"email\": \"{{ $fromAI('correo', 'correo@correo.com') }}\",\n    \"phoneNumber\": \"{{$fromAI('numero_contacto', '5534073167')}}\"\n  },\n  \"start\": \"{{ $fromAI('fecha_elegida', '2025-09-01T06:13:47.414-09:00') }}\",\n  \"eventTypeId\": 3201745\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequestTool",
      "typeVersion": 4.2,
      "position": [
        1856,
        80
      ],
      "id": "5cca7e4c-7adf-4e7b-a6e4-7b09d400e349",
      "name": "create_booking"
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryZep",
      "typeVersion": 1.3,
      "position": [
        1216,
        256
      ],
      "id": "dd482a40-b826-4455-8ae3-27948549a14e",
      "name": "Zep",
      "credentials": {
        "zepApi": {
          "id": "wD00VTpTdXyzhDn6",
          "name": "Zep Api account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.cal.com/v2/slots?start=2025-08-30T09:00:00Z&end=2025-09-08T09:00:00Z&timeZone=America%2FMexico_City&eventTypeId=3201745",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer cal_live_b1d89ae4b002f27c7adc2752686c0b6e"
            },
            {
              "name": "cal-api-version",
              "value": "2024-09-04"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -48,
        -576
      ],
      "id": "52b6d2b1-b8a7-4105-8572-7da25afc5b8f",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0e65757f-2f9f-4c10-8a2b-f8730e673ed4",
              "name": "id",
              "value": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
              "type": "string"
            },
            {
              "id": "0dc9eac7-0e12-4a42-b343-31994244bdb8",
              "name": "mensaje",
              "value": "={{ $('Edit Fields').item.json.mensaje }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1120,
        976
      ],
      "id": "daf33f75-7b73-45ca-95cb-2c5cf77f98f3",
      "name": "Edit Fields3"
    },
    {
      "parameters": {
        "chatId": "={{ $('Edit Fields3').item.json.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2064,
        976
      ],
      "id": "c8d862e4-c308-46a7-8209-2022c7acdda0",
      "name": "Send a text message2",
      "webhookId": "1cc86ecd-0a0b-4b34-9bd8-f0cbfb719784",
      "credentials": {
        "telegramApi": {
          "id": "PWWICc6HrrGPnXpR",
          "name": "Clinica Denatal"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.mensaje }}",
        "options": {
          "systemMessage": "Recibiras un mensaje debes personalizar la respuesta dando los servicios que da este chat bot, los cuales son \n\n¡Hola! Soy el asistente de Clínica Dental Sonrisa 🦷. Para ayudarte rápido, elige una opción:\n\n1.Agendar cita\n\n2.Info de servicios y precios\n\n3.Reagendar/Cancelar\n\n4.Facturación\n\n5. Hablar con una persona\nResponde con el número o escribe la opción."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        1536,
        976
      ],
      "id": "0a713f6f-3973-4d09-b73f-ed6919a70b8f",
      "name": "AI Agent1"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        1600,
        1200
      ],
      "id": "68562222-5af4-4adc-8ef2-63b9e124b05d",
      "name": "OpenAI Chat Model6",
      "credentials": {
        "openAiApi": {
          "id": "a6T9FSulj0yWIirx",
          "name": "Converging"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2025-07-30T07:16:47.434Z",
      "updatedAt": "2025-07-30T07:16:47.434Z",
      "id": "mSpHjLUfWIhOQqzc",
      "name": "Experimentos"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2025-08-30T13:49:55.000Z",
  "versionId": "12d35918-b61c-4b49-82fa-5d0bfe6f4a27"
}