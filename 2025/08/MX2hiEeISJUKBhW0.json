{
  "active": false,
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Insert rows in a table",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Insert rows in a table": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-08-13T10:29:53.240Z",
  "id": "MX2hiEeISJUKBhW0",
  "isArchived": false,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Museo",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "e2b7628b-b8e3-43c0-9eea-6cccb8cf234a",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://bigquery.googleapis.com/bigquery/v2/projects/proyectojuian/queries",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "googleOAuth2Api",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {}
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "useLegacySql",
              "value": "false"
            },
            {
              "name": "query",
              "value": "SELECT publication_number, title_localized, inventor_harmonized, assignee_harmonized, application_number, filing_date, publication_date, country_code FROM `patents-public-data.patents.publications` WHERE country_code = \"MX\" ORDER BY publication_date DESC "
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        208,
        0
      ],
      "id": "81dd04e0-a4eb-4413-8370-358b711c32b7",
      "name": "HTTP Request",
      "credentials": {
        "googleOAuth2Api": {
          "id": "v1qjPYuVWoNveqe2",
          "name": "Google account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// n8n -> Nodo \"Function\". Entrada: el nodo HTTP Request de BigQuery (items[0].json)\n// Salida: items planos listos para DB.\n\nfunction toYMD(n) {\n  if (!n) return null;\n  const s = String(n);\n  return `${s.slice(0,4)}-${s.slice(4,6)}-${s.slice(6,8)}`;\n}\n\nfunction pickTitle(titleRecords) {\n  if (!Array.isArray(titleRecords) || !titleRecords.length) return null;\n  const parseRec = r => {\n    const f = r?.v?.f || [];\n    return { text: f[0]?.v ?? null, lang: f[1]?.v ?? null };\n  };\n  const parsed = titleRecords.map(parseRec);\n  return (parsed.find(t => t.lang === 'es')?.text)\n      || (parsed.find(t => t.lang === 'en')?.text)\n      || parsed[0]?.text\n      || null;\n}\n\nfunction listNames(recs) {\n  if (!Array.isArray(recs)) return [];\n  return recs.map(r => r?.v?.f?.[0]?.v).filter(Boolean);\n}\n\nconst resp = items[0].json;            // bigquery#queryResponse\nconst rows = resp?.rows || [];\nconst out = rows.map(r => {\n  const f = r.f || [];\n  const publication_number = f[0]?.v ?? null;\n  const title_localized = f[1]?.v ?? [];\n  const inventor_harmonized = f[2]?.v ?? [];\n  const assignee_harmonized = f[3]?.v ?? [];\n  const application_number = f[4]?.v ?? null;\n  const filing_date = f[5]?.v ?? null;         // INTEGER YYYYMMDD\n  const publication_date = f[6]?.v ?? null;    // INTEGER YYYYMMDD\n  const country_code = f[7]?.v ?? null;\n\n  return {\n    publication_number,\n    title: pickTitle(title_localized),\n    inventors: listNames(inventor_harmonized).join('; '),\n    assignees: listNames(assignee_harmonized).join('; '),\n    application_number,\n    filing_date: toYMD(filing_date),\n    publication_date: toYMD(publication_date),\n    country_code,\n  };\n});\n\nreturn out.map(json => ({ json }));\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        416,
        0
      ],
      "id": "a32a9d12-a800-46bd-861e-c9f1ee8e2860",
      "name": "Code"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        672,
        -80
      ],
      "id": "213cd823-a879-4163-b89b-4687edbc3781",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "schema": {
          "__rl": true,
          "mode": "list",
          "value": "public"
        },
        "table": {
          "__rl": true,
          "value": "patentes_mx",
          "mode": "list",
          "cachedResultName": "patentes_mx"
        },
        "columns": {
          "mappingMode": "autoMapInputData",
          "value": {},
          "matchingColumns": [
            "id"
          ],
          "schema": [
            {
              "id": "id",
              "displayName": "id",
              "required": false,
              "defaultMatch": true,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true
            },
            {
              "id": "publication_number",
              "displayName": "publication_number",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "title",
              "displayName": "title",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "inventors",
              "displayName": "inventors",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "assignees",
              "displayName": "assignees",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "application_number",
              "displayName": "application_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "filing_date",
              "displayName": "filing_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "publication_date",
              "displayName": "publication_date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "country_code",
              "displayName": "country_code",
              "required": true,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            },
            {
              "id": "updated_at",
              "displayName": "updated_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "dateTime",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [
        880,
        16
      ],
      "id": "378fbea5-87d5-4f77-8143-26f6110c7c8d",
      "name": "Insert rows in a table",
      "credentials": {
        "postgres": {
          "id": "DYBQnA4KMQwq87zR",
          "name": "Postgres account"
        }
      }
    }
  ],
  "pinData": {},
  "repo_name": "n8n_plantillas",
  "repo_owner": "pakosanchez27",
  "repo_path": "https://github.com/pakosanchez27/n8n_plantillas",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-08-13T11:38:30.000Z",
  "versionId": "c146984c-21fa-49a4-915e-4627acb177ee"
}